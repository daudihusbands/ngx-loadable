(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"xps+":function(e,n,o){"use strict";o.r(n);var t=o("EM62"),l=o("uHuC"),r=o("PCNd"),a=o("sEIs");const c=[1,"wrapper"],m=["color","accent"];let s=(()=>{class e{constructor(){this.codeExampleComponent=p,this.codeExampleModule=u,this.codeExampleAppModule=d,this.codeExampleSharedModule=i}ngOnInit(){}}return e.ngComponentDef=t.Yb({type:e,selectors:[["demo-getting-started"]],factory:function(n){return new(n||e)},consts:24,vars:0,template:function(e,n){1&e&&(t.lc(0,"div",c),t.lc(1,"h1"),t.Pc(2,"Getting started"),t.jc(),t.lc(3,"p"),t.Pc(4," Start using Angular elements or any other web components in your applications by following these 3 steps... "),t.jc(),t.lc(5,"ol"),t.lc(6,"li"),t.Pc(7," Install "),t.lc(8,"code",m),t.Pc(9,"ng add ngx-loadable"),t.jc(),t.jc(),t.lc(10,"li"),t.Pc(11," Add lazy loaded module "),t.lc(12,"code"),t.Pc(13," ng generate ngx-loadable:module lazy --module app "),t.jc(),t.fc(14,"br"),t.Pc(15," Optional flag "),t.lc(16,"code"),t.Pc(17,"element"),t.jc(),t.Pc(18," can be added to create it as a Angular Element "),t.jc(),t.lc(19,"li"),t.Pc(20," Use "),t.lc(21,"code"),t.Pc(22,"ngx-loadable"),t.jc(),t.Pc(23," component to load the lazy component "),t.jc(),t.jc(),t.jc())},styles:["ol[_ngcontent-%COMP%]{margin:0 0 20px}h2[_ngcontent-%COMP%]{margin:40px 0 10px;font-weight:700}.responsive-large[_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%], .responsive-large   [_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]{width:70%}"]}),e})();const p="import { Component } from '@angular/core';\n\n@Component({\n  selector: 'your-org-feature',\n  template: `\n    <some-element *axLazyElement=\"elementUrl\"></some-element>\n  `\n})\nexport class FeatureComponent {\n  elementUrl = 'https://your-org.com/elements/some-element.js';\n}\n",u="import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LazyElementsModule } from '@angular-extensions/elements';\n\nimport { FeatureComponent } from './feature-component';\n\n@NgModule({\n  imports: [CommonModule, LazyElementsModule], // or imports: [SharedModule]\n  declarations: [FeatureComponent]\n})\nexport class FeatureModule {}\n",d="import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { LazyElementsModule } from '@angular-extensions/elements';\n\n@NgModule({\n  imports: [BrowserModule, LazyElementsModule],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",i="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LazyElementsModule } from '@angular-extensions/elements';\n\n@NgModule({\n  imports: [CommonModule, LazyElementsModule],\n  exports: [CommonModule, LazyElementsModule]\n})\nexport class SharedModule {}\n",g=[{path:"",component:s}];let M=(()=>{class e{}return e.ngModuleDef=t.cc({type:e}),e.ngInjectorDef=t.bc({factory:function(n){return new(n||e)},imports:[[a.f.forChild(g)],a.f]}),e})();a.f.forChild(g),o.d(n,"GettingStartedModule",function(){return f});let f=(()=>{class e{}return e.ngModuleDef=t.cc({type:e}),e.ngInjectorDef=t.bc({factory:function(n){return new(n||e)},imports:[[l.b,r.a,M]]}),e})()}}]);